-- Given :

CREATE TABLE CUSTOMER (
CUSTOMER_NO CHAR (5) PRIMARY KEY ,
CUSTOMER_NAME VARCHAR (20) NOT NULL ,
CUSTOMER_CITY VARCHAR (10)
) ;
CREATE TABLE ACCOUNT (
ACCOUNT_NO CHAR (5) PRIMARY KEY ,
BALANCE DECIMAL (12 ,2) NOT NULL
) ;
CREATE TABLE DEPOSITOR (
CUSTOMER_NO CHAR (5) ,
ACCOUNT_NO CHAR (5) ,
PRIMARY KEY ( CUSTOMER_NO , ACCOUNT_NO )
) ;


INSERT INTO CUSTOMER ( CUSTOMER_NO , CUSTOMER_NAME , CUSTOMER_CITY ) VALUES
('C-101', 'John Doe','DHK'),
('C-102', 'Jane Smith', 'KHL'), 
('C-103', 'Alice Brown', 'CTG'),
 ('C-104', 'Bob Johnson', 'DHK') ;

INSERT INTO ACCOUNT ( ACCOUNT_NO , BALANCE ) VALUES('A-101', 5000.00),
('A-102', 15000.00),
('A-103', 25000.00),
('A-104', 8000.00);


INSERT INTO DEPOSITOR ( CUSTOMER_NO , ACCOUNT_NO ) VALUES ('C-101', 'A-101'),
('C-102', 'A-102'),
('C-103', 'A-103'),
('C-104', 'A-104');



-- task 1:
ALTER TABLE CUSTOMER
ADD COLUMN DATE_OF_BIRTH DATE;

-- task 2:
RENAME TABLE DEPOSITOR TO DEPOSITOR_INFO;

-- task 3:
ALTER TABLE DEPOSITOR_INFO
CHANGE COLUMN CUSTOMER_NO C_NO CHAR(5);

ALTER TABLE DEPOSITOR_INFO
CHANGE COLUMN ACCOUNT_NO A_NO CHAR(5);

-- task 4:
ALTER TABLE DEPOSITOR_INFO
ADD CONSTRAINT fk_customer FOREIGN KEY (C_NO) REFERENCES CUSTOMER(CUSTOMER_NO);

ALTER TABLE DEPOSITOR_INFO
ADD CONSTRAINT fk_account FOREIGN KEY (A_NO) REFERENCES ACCOUNT(ACCOUNT_NO);

-- task 5:
SELECT * FROM CUSTOMER;

-- TASK 6:
SELECT CUSTOMER.CUSTOMER_NAME, ACCOUNT.BALANCE
FROM CUSTOMER
INNER JOIN DEPOSITOR_INFO ON CUSTOMER.CUSTOMER_NO = DEPOSITOR_INFO.C_NO
INNER JOIN ACCOUNT ON DEPOSITOR_INFO.A_NO = ACCOUNT.ACCOUNT_NO;


-- TASK 7:
SELECT AVG(BALANCE) AS Average_Balance
FROM ACCOUNT;

-- TASK 8:
SELECT CUSTOMER_NAME, A_NO
FROM CUSTOMER
NATURAL JOIN DEPOSITOR_INFO;

-- TASK 9:
UPDATE CUSTOMER
SET CUSTOMER_CITY = 'KLN'
WHERE CUSTOMER_NO = 'C-102';

-- TASK 10:
DELETE FROM ACCOUNT
WHERE ACCOUNT_NO = 'A-104';


-- TASK 11:
DELETE FROM CUSTOMER
WHERE CUSTOMER_NO NOT IN (SELECT C_NO FROM DEPOSITOR_INFO);




-- Task 2.1
CREATE TABLE LOAN(
LOAN_NO CHAR(5) PRIMARY KEY,
AMOUNT DECIMAL(12,2) NOT NULL
);

-- TASK 2.2
INSERT INTO LOAN VALUES ('L-201', 10000.00),
('L-202', 20000.00),
('L-203', 15000.00);

CREATE TABLE BORROWER (
CUSTOMER_NO CHAR (5) ,
LOAN_NO CHAR (5) ,
PRIMARY KEY (CUSTOMER_NO , LOAN_NO) ,
FOREIGN KEY (CUSTOMER_NO) REFERENCES CUSTOMER (CUSTOMER_NO) ,
FOREIGN KEY (LOAN_NO) REFERENCES LOAN (LOAN_NO)
) ;

INSERT INTO BORROWER VALUES ('C-101', 'L-201'),
('C-102', 'L-202'),
('C-103', 'L-203');


-- TASK 2.3
SELECT CUSTOMER.CUSTOMER_NO, CUSTOMER.CUSTOMER_NAME
FROM CUSTOMER
INNER JOIN DEPOSITOR_INFO ON CUSTOMER.CUSTOMER_NO = DEPOSITOR_INFO.C_NO
INNER JOIN BORROWER ON CUSTOMER.CUSTOMER_NO = BORROWER.CUSTOMER_NO;


-- TASK 2.4
SELECT CUSTOMER.CUSTOMER_NO, CUSTOMER.CUSTOMER_NAME
FROM CUSTOMER
INNER JOIN DEPOSITOR_INFO ON CUSTOMER.CUSTOMER_NO = DEPOSITOR_INFO.C_NO
LEFT JOIN BORROWER ON CUSTOMER.CUSTOMER_NO = BORROWER.CUSTOMER_NO
WHERE BORROWER.LOAN_NO IS NULL;


 -- OR,
 SELECT CUSTOMER.CUSTOMER_NO, CUSTOMER.CUSTOMER_NAME
FROM CUSTOMER
INNER JOIN DEPOSITOR_INFO ON CUSTOMER.CUSTOMER_NO = DEPOSITOR_INFO.C_NO
WHERE CUSTOMER.CUSTOMER_NO NOT IN (
    SELECT BORROWER.CUSTOMER_NO
    FROM BORROWER
);


-- TASK 2.5
UPDATE ACCOUNT
SET BALANCE = BALANCE * 1.05
WHERE BALANCE < 10000;




